{"version":3,"sources":["components/images/memphis-colorful.png","components/Header.js","components/Jumbotron.js","components/CardContainer.js","components/Card.js","components/Footer.js","App.js","components/helpers.js","index.js"],"names":["module","exports","__webpack_require__","p","Wrapper","styled","div","_templateObject","correctColors","keyframes","_templateObject2","incorrectColors","_templateObject3","Message","h2","_templateObject4","props","className","Header","react_default","a","createElement","msgClass","msg","score","topScore","Jumbotron_templateObject","Background","Title","h1","Jumbotron_templateObject2","Jumbotron","Jumbotron_Wrapper","CardContainer_templateObject","CardContainer","CardContainer_Wrapper","children","Image","img","Card_templateObject","Card","src","image","alt","name","onClick","checkIfClicked","id","style","top","width","height","backgroundColor","bottom","display","flexFlow","justifyContent","alignItems","color","i","fontSize","marginLeft","Footer","Fragment","App_templateObject","App","state","cards","characters","currScore","maxScore","componentDidMount","_this","setState","clickedCard","filter","card","cardsCopy","arr","length","j","Math","floor","random","temp","shuffleArr","slice","clicked","newCardCopy","map","setTimeout","findIndex","componentDidUpdate","prevProps","prevState","console","log","_this2","this","components_Header","App_Wrapper","components_Jumbotron","components_CardContainer","_ref","components_Card","key","components_Footer","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.07b582c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/memphis-colorful.8b33b229.png\";","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 0 5%;\r\n  background-color: #2874A6;\r\n  color: #f8f8f8;\r\n  box-shadow: 0 8px 12px -6px black;\r\n  position: fixed;\r\n  height: 70px;\r\n  width: 90%;\r\n  z-index: 5;\r\n`;\r\n\r\nconst correctColors = keyframes`\r\n  from {color: seagreen;}\r\n  to {color: #f8f8f8}\r\n`;\r\n\r\nconst incorrectColors = keyframes`\r\n  from {color: tomato;}\r\n  to {color: #f8f8f8}\r\n`;\r\n\r\nconst Message = styled.h2`\r\n  animation-name: ${props => props.className === 'correct' ? correctColors : props.className === 'incorrect' ? incorrectColors : false};\r\n  animation-duration: 2s;\r\n  \r\n`;\r\n\r\nconst Header = props => {\r\n  return (\r\n    <Wrapper>\r\n      <h1>Clicky Game</h1>\r\n      <Message className={props.msgClass}>{props.msg}</Message>\r\n      <h2>Score: {props.score} | Top Score: {props.topScore}</h2>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Background from './images/memphis-colorful.png';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n  height: 40vh;\r\n  background-image: url(${Background});\r\n  color: #606060;\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-bottom: 1px solid lightgray;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 5em;\r\n  margin: 0;\r\n`;\r\n\r\nconst Jumbotron = () => {\r\n  return (\r\n    <Wrapper>\r\n      <Title>Clicky Game</Title>\r\n      <h3>Click on an image to earn points, but don't click the same image twice!</h3>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Jumbotron;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Wrapper = styled.div`\r\n  width: 60vw;\r\n  margin: 0 auto;\r\n  padding: 75px 0;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  flex-flow: row wrap;\r\n`;\r\n\r\nconst CardContainer = props => {\r\n  return <Wrapper>{props.children}</Wrapper>\r\n}\r\n\r\nexport default CardContainer;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Image = styled.img` \r\n  width: 135px;\r\n  height: 135px;\r\n  border: 5px solid #dcdcdc;\r\n  border-radius: 5px;\r\n  box-shadow: 5px 5px 8px gray;\r\n  margin: 20px;\r\n  padding: 15px;\r\n\r\n  &:hover{\r\n    transform: scale(1.05);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Card = props => {\r\n  return (\r\n    <Image\r\n      src={props.image}\r\n      alt={props.name}\r\n      onClick={() => props.checkIfClicked(props.id)}\r\n    />\r\n  )\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nconst style = {\r\n  top: {\r\n    width: '100%',\r\n    height: 20,\r\n    backgroundColor: '#3498DB'\r\n  },\r\n  bottom: {\r\n    width: '100%',\r\n    height: 50,\r\n    display: 'flex',\r\n    flexFlow: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: '#1B4F72',\r\n    color: '#f8f8f8'\r\n  },\r\n  i: {\r\n    color: '#58D68D',\r\n    fontSize: '1.5rem',\r\n    marginLeft: 5\r\n  }\r\n}\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div style={style.top}></div>\r\n      <div style={style.bottom}>\r\n        Built with React.JS <i className=\"fab fa-react\" style={style.i}></i>\r\n      </div>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport Header from './components/Header'\nimport Jumbotron from './components/Jumbotron';\nimport CardContainer from './components/CardContainer';\nimport Card from './components/Card';\nimport Footer from './components/Footer';\nimport characters from './characters.json';\nimport { shuffleArr } from './components/helpers';\nimport styled from 'styled-components';\n\n\nconst Wrapper = styled.div`\n  position: relative;\n  top: 70px;\n`;\n\nclass App extends React.Component {\n  state = {\n    cards: characters,\n    currScore: 0,\n    topScore: 0,\n    maxScore: 15,\n    msg: \"\",\n    msgClass: \"\"\n  };\n\n  componentDidMount = () => {\n    this.setState({ msg: \"Click on an image!\" })\n  };\n\n  checkIfClicked = id => {\n    // create copy of clicked card using character id\n    let clickedCard = this.state.cards.filter(card => card.id === id)[0];\n\n    // create copy of cards and randomize order\n    let cardsCopy = shuffleArr(this.state.cards.slice());\n\n    // if a card hasn't been clicked, set clicked to true and add to cardsCopy\n    if (!clickedCard.clicked) {\n      // set clicked to true and add to cardsCopy arr\n      clickedCard.clicked = true;\n      cardsCopy[cardsCopy.findIndex(card => card.id === id)] = clickedCard;\n\n      // set the state of cards to cardsCopy, add one to currScore, check if currScore is > topScore\n      this.setState({\n        cards: cardsCopy,\n        currScore: this.state.currScore + 1,\n        topScore: this.state.currScore + 1 > this.state.topScore ? this.state.currScore + 1 : this.state.topScore,\n        msg: \"You choose correctly!\",\n        msgClass: 'correct'\n      })\n\n      setTimeout(() => {\n        this.setState({ msgClass: \"\" })\n      }, 1000)\n    }\n    // if a card has been clicked, set click to false and reset game\n    else if (clickedCard.clicked) {\n      let newCardCopy = cardsCopy.map(card => {\n        return {\n          id: card.id,\n          name: card.name,\n          image: card.image,\n          clicked: false\n        }\n      })\n\n      this.setState({\n        cards: newCardCopy,\n        currScore: 0,\n        msg: \"You chose incorrectly!\",\n        msgClass: \"incorrect\"\n      })\n\n      setTimeout(() => {\n        this.setState({ msgClass: \"\" })\n      }, 1000)\n    }\n  }\n\n  componentDidUpdate = (prevProps, prevState) => {\n    console.log('APP DID UPDATE');\n    console.log(prevState.msgClass)\n  }\n\n  render() {\n    const { cards } = this.state\n\n    return (\n      <React.Fragment>\n        <Header\n          msgClass={this.state.msgClass}\n          msg={this.state.msg}\n          score={this.state.currScore}\n          topScore={this.state.topScore}\n        />\n        <Wrapper>\n          <Jumbotron />\n          <CardContainer>\n            {\n              cards.map(({ id, name, image }) => {\n                return (\n                  <Card\n                    key={id}\n                    id={id}\n                    name={name}\n                    image={image}\n                    checkIfClicked={this.checkIfClicked}\n                  />\n                )\n              })\n            }\n          </CardContainer>\n          <Footer />\n        </Wrapper>\n      </React.Fragment>\n    );\n  };\n}\n\nexport default App;\n","function shuffleArr(arr) {\r\n  let i = arr.length - 1;\r\n  for (; i > 0; i--) {\r\n    const j = Math.floor(Math.random() * (i + 1));\r\n    const temp = arr[i];\r\n    arr[i] = arr[j];\r\n    arr[j] = temp;\r\n  }\r\n  return arr\r\n}\r\n\r\nexport { shuffleArr };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}